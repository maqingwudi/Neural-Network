function [Y,Xf,Af] = myNeuralNetworkFunction(X,Xi,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 05-Dec-2024 21:50:22.
%
% [Y,Xf,Af] = myNeuralNetworkFunction(X,Xi,~) takes these arguments:
%
%   X = 2xTS cell, 2 inputs over TS timesteps
%   Each X{1,ts} = Qx1 matrix, input #1 at timestep ts.
%   Each X{2,ts} = Qx1 matrix, input #2 at timestep ts.
%
%   Xi = 2x6 cell 2, initial 6 input delay states.
%   Each Xi{1,ts} = 1xQ matrix, initial states for input #1.
%   Each Xi{2,ts} = 1xQ matrix, initial states for input #2.
%
%   Ai = 2x0 cell 2, initial 6 layer delay states.
%   Each Ai{1,ts} = 35xQ matrix, initial states for layer #1.
%   Each Ai{2,ts} = 1xQ matrix, initial states for layer #2.
%
% and returns:
%   Y = 1xTS cell of 2 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
%   Xf = 2x6 cell 2, final 6 input delay states.
%   Each Xf{1,ts} = 1xQ matrix, final states for input #1.
%   Each Xf{2,ts} = 1xQ matrix, final states for input #2.
%
%   Af = 2x0 cell 2, final 0 layer delay states.
%   Each Af{1ts} = 35xQ matrix, final states for layer #1.
%   Each Af{2ts} = 1xQ matrix, final states for layer #2.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 2.24;
x1_step1.gain = 0.0383435582822086;
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 36.72;
x2_step1.gain = 0.0903614471439977;
x2_step1.ymin = -1;

% Layer 1
b1 = [-1.8110577784153236713;1.4984222753272509188;1.3904397280144873417;-1.3786321208366387747;1.731035259620900435;1.4242764328780004313;1.1859985833895299034;-0.91215588282325965608;0.83158669307534449633;0.38165163627636250476;-0.72763293284740970801;0.80826221990655600091;0.50825215758788389042;0.17011230817512357216;-0.30824375893763755752;0.40456189628739980257;0.16774471816006092384;0.15230425831836164052;-0.02603861357462272999;-0.061675703807671407308;0.13088582511155893995;0.20095204204339511822;-0.54453707595662648178;0.17820819066240892181;-0.85008687641224411902;-0.77573006401412691879;1.0441793031041004536;0.90812516252234254388;1.7401158753543024549;1.3541785148969889274;-1.7078341453684819928;-1.5103669320748065452;-1.6143231477989306022;-1.9577912351783854916;2.1911951785192531617];
IW1_1 = [0.58170984170299178118 0.4331192648690682101 0.85405330992777828136 0.20147610887247593969 0.75228338983707210286 0.50737456979616391006;-0.18805609696539787867 0.13364986907928858018 -0.86453727803721847067 -0.037591876778487867683 -0.79089520194593510016 -0.6493966026370967537;-0.051356610761028161083 0.32276068019012915666 -0.55849015531376888788 -0.15470978797866000165 -0.55890440854747935884 0.64239141645564834526;0.20746935790609447037 -0.61348930361843934111 0.66808744641427941779 -0.5409309777370687744 0.46028679011341266936 -0.07200726331764328858;-0.53362208252319998092 0.73469720466663523961 0.83494555339477782852 -0.059948056528183420177 -0.57472386502998706881 0.06512032031239323171;-0.14546050054265119433 0.060845451506964118304 0.0079514206911541623901 -0.91347913792621626694 -0.31132201057652797438 0.38502866189195156243;-0.47708065741927990766 0.4765106438391219501 -0.013498278721242229841 -0.1294130304358176442 -0.59890966882871921051 0.92583331948918068388;0.74293051194962489436 -1.4074237804246376715 0.75235992878233093339 -0.13078984753895855908 -0.012774756942104791707 0.097777067177315823976;0.11256826875488232242 1.0326336561607840636 -0.41165099571150026714 -0.61455368456226266982 0.51438978758723474805 0.17617856395858294549;-0.36348928408355524189 -0.64064901913538452316 -0.3956120516553211508 0.76587254223919154494 -0.11035262228164754994 -0.20759360520142863815;0.29625370997097122405 -0.66362127379512925174 -0.80152146021188441782 -0.15390514159685630968 0.43725550750770714181 -0.16120074940408402053;-0.68697610649919416126 0.55786375261137410853 0.66681898103854364557 0.70036254513833262614 0.37625889580374310972 -0.10157605477214247391;0.039157762014895902691 -0.54332588145739979524 -0.15718268706843488425 0.55313857256852283495 -0.82026737398853699634 0.37391975783596881344;-0.37687013099524901971 -0.88610611815248241374 0.15681448725761451546 0.92211453691101974428 -0.18416735218664168072 0.44863832022948640921;-0.16343462213107742831 -0.91481667305469016593 -0.44421684697856722579 0.50722721463312081536 0.94790504194035174468 0.037978090336894587686;-0.330298245488402753 0.83114177685383816563 0.42790046105215612249 -0.64006554013532268588 0.5735605163380245175 -0.30174751762542306732;0.76544121271595122469 0.50908129898787912726 -0.06167655001922987823 -0.42904144375498237673 0.57434392874268147544 -0.22350581187025145291;-0.23744915492473259166 0.49772520670910874729 -0.10339993678807982147 0.54060766025387629874 -0.75394159246775549477 0.038686447751143653029;-1.0048056959234987762 0.029425758447691467007 -0.69991466234983423789 0.40752729454109143381 0.048815220796240871293 1.3603438354203756244;0.012488651810436091419 0.48942666719685884447 0.18340184523201366606 -0.62752738520571016423 -0.51128018200260405557 0.97610447873164241095;0.26477524527604290316 -0.57162887310836540955 -0.284032721080698769 -0.67045869687213222043 -0.21095661862237991002 -0.54964661191780761484;-0.64058522488086677704 0.47062773477969099822 -0.44211421534431721847 -0.63242539029552835572 -0.23038095775139838528 0.42024336010397533858;-0.44995114318442791523 0.6277876520726064502 0.12001096125439471296 -0.47390516752468231365 -0.58139511238673702298 0.7334401289500125376;0.79313506351902895997 0.14706280847146996349 -0.73259219748132264893 -0.22999652265145489882 0.61024455185590886774 -0.24809438775978923108;0.29357834440083835359 0.41907437227084648468 -0.61772470507246701743 0.75205900670038783318 0.015047585028117205219 0.203559030034892674;-0.15597500582862314222 0.27460972152924989498 -0.1043169260278852678 -0.41239061327493409248 0.45164050415052481302 0.29690613362678874854;0.065504357748891281488 -0.79759666006566865004 0.4284969594537663129 0.50175332054965571249 0.62728798565731513914 -0.23228575612984303511;0.70987423788642489697 -0.2937866071644092969 0.21704560517821294696 0.55721570587865165702 -0.76875747834716146034 -0.45105414530552118135;0.62785938614665248725 -0.35290633084537992303 0.74454207481773793109 -0.20448553154810511501 0.25418062116765038905 -0.88402607379695608003;0.35595642102154984032 0.41908779847550181596 -0.50904649780313859786 -0.3001888245421961976 0.82859594289927407385 -0.74659877826539455814;-0.022364208304524135079 0.74311330317918866672 -0.24530888896519248421 0.033266843537120810437 -0.36136698578635667589 0.96297313243584159448;-0.51063339175389210745 -0.47851731964286459142 -0.59775272204507268192 0.66906525669496297315 0.32727626095609380075 0.21700071063921649861;-0.62269307737453616358 -0.67144345127566007481 -0.5961305016017509617 0.18392162593205399479 -0.29266352326753614088 0.36424979990195982538;-0.54822989746931771737 0.23489870601695023167 -0.066411393789310921298 -0.39344586299912609473 0.30929622674464296583 -0.59471912305817631328;0.82189530162642954192 0.18110231499631926355 -0.63233464894814872537 0.37126434574837907654 -0.30213255719316473025 -1.0869668816990958327];
IW1_2 = [-0.50557954764963908278 0.92889895280750500728 0.55399530974176558473 0.30793396949394913342 -0.57483989144947145178 0.11119427488046899899;-0.183044378596159657 0.97090851763973218258 0.12926810141525824083 -0.13098330673616295772 0.7903317186256297866 -0.041205941791627745396;0.68958181584250255458 -0.66324920397273723349 -0.60891354013503440346 -0.30775585224924761896 0.56199402152215693906 -0.04598139591334681614;0.60616636928983613775 0.17578814236567499862 -0.59738138666489792872 0.89510986213542609313 0.92953063797628510123 0.21820486506378231062;-0.79329308529349595869 0.47536038022072474307 -0.28094859695367452312 -0.074045854404255387338 -0.28717245070263747175 0.55876699966444154377;-0.49319210830672199908 0.34309971728996119245 -0.21263147824519021412 0.56184766239417816003 -0.55070034883960716776 -0.75901927813552150237;0.17429582727229753214 -0.20763443010944535039 -0.86360890923040900535 -0.057426505869502077195 1.0079693006422330015 -0.50656758703940385491;0.44756014653307746309 -0.32646231916023860098 -0.39875266835964590095 0.58646584390690226218 -0.66013723784337530187 0.37017183023607597159;1.2208664148309651409 -0.66778965692631109263 -0.17671845139457065255 -0.40727195978827690492 -0.19218915373812797687 -0.23155713697341304136;1.0897462900520848983 -0.41905142239741943744 -0.84854140962958468641 -0.18475986385524736932 -0.20963642642414501149 0.43576498326100465697;-0.54307394520221219381 0.52505661469488396076 -0.91066197573568152812 0.21607598841489036867 -0.27932420012065273252 -0.81884568421817305328;-0.35816018793545939536 -0.36164585977628671554 -0.51399764645866863333 -0.38662362636008340555 -0.45293374412114401073 0.68893897573353224395;-0.05389872295535026725 -0.59899232493762344376 0.99730292558873012698 0.19738266418923616774 -0.47112111673846829296 0.16203238718578613642;0.30032327815158144091 -0.082496063324417445717 0.083163826546262600847 0.20341657435712770519 1.1181466856121322628 0.41925008223195348034;-0.8420259186133994822 -0.49124764276748617009 -0.3262028508856553155 -0.89701421849652540619 0.18568827859278391745 0.032633712233134458403;0.022148184423440589463 0.24526719509252858931 0.39008202272844461067 -0.68933934733583901444 -1.0211273094508888093 0.19047944536323085929;-0.44416996923208057479 0.61574166754616921349 0.22872161810696473028 0.28394339633019699543 0.95301008125659569803 -0.73114694695456916573;-0.85104265006833423879 -0.067519517889818567169 0.24618828461190747636 -0.013857140721216680557 -0.79733834255029323312 0.81545727936551060111;0.035648749148250107044 0.84689087557953557361 -0.10365582183732212351 -0.024408967504379736058 -0.39047842615034633607 -0.18502951673981674063;0.47434531216073561044 -0.27718737810203319949 -0.20781034842933673867 0.82019070593490084331 -0.56155701129438118091 -0.67223221051712389595;0.72283932249296434236 -1.0413606051720862844 0.44746162152438095916 0.39041008305159025094 0.30760922593987843898 0.55273381753509343017;-1.1060894783998298507 -0.079317496162202225096 -0.28120737308532950394 0.61049273992423669366 0.031378294714164485513 0.50558008799833964453;0.49411592969659273722 0.55925209332307679322 -0.47487048619334698563 0.64423280635121404902 0.16123262872112886779 -0.71454428520769330824;-0.51816387029987931445 -0.11104841361720516058 -0.83662770844177725138 0.094313114993115301776 0.70143392809104121444 0.23167808490314306669;0.0077528543732255823795 0.0087001986865521910991 0.72877486244920797187 -0.7409186237170576339 0.35729356845347431948 0.063390647104534902923;-0.88299507645905972453 -0.40189160976838200767 0.060891596017152251064 -0.313811040397662111 -0.41668625993010038888 0.84728635047004807745;-0.1036014639411543814 -0.41517889796825158122 0.36064045138658806788 0.79949013512933886361 -0.88512890255249820903 0.21262857596068276966;0.70138077097488382705 0.6743750555478866815 -0.2906468248540051702 -0.15007632896992839644 0.75027395900662929851 -0.24472995102022920832;-0.38959769731023113915 -0.30019022190466415623 -0.076276688502726813779 -0.087865074251407201955 0.75241861209443694491 -0.043854981635139921037;-0.10111378865248930869 -0.71144349195658873608 0.7425692586950477514 0.68126326539754933354 -0.31252588489295751728 0.017774075893310418983;0.16471450285981456552 0.80347959620175335438 0.16734952880997200353 0.020279111407232857517 0.59443446909489838781 -0.26019231603038300848;-0.17631464667719937145 0.43714998420006134783 -0.69962929801952244979 -0.73541691990831670189 -0.84944077760608283079 0.35868112623018655327;-0.23917221103188932019 0.19338553147870971016 0.32161657984328112514 0.90117740846592819803 0.56967496756240965095 0.83075277715159068226;0.29022296142790265927 -0.77344481146266108595 0.62873785716315111483 -0.61207446437444890108 0.39395052566881144651 0.76420556788657234559;0.078605802663460538904 0.42994922005496410966 -0.73315878176904270003 -0.40912681446754300962 0.1763631115686943307 0.36128166147439122469];

% Layer 2
b2 = -0.75275840081252631819;
LW2_1 = [-0.026340841455082118078 -0.077791045898095864675 0.53396133310879412281 0.1195898005106589973 0.39601467299262371746 0.48909092269146842158 -0.6050027408048023192 0.98213163723755159129 0.70994905327698476505 -0.28308632164372188322 -0.0079763199911535073022 0.1463775052036482005 -0.26807752278865409901 -0.19806982551691867944 -0.2387190515221572773 -0.59937864287224806858 0.11021397976454760936 0.012279882011983808687 0.34825918667501964965 -0.73274673014851954278 -0.1200419954767707742 0.42152719356809292828 -0.043476276833325722126 -0.46104231179656685047 0.54977848828466291398 -0.50398177237122687711 -0.22892048376245521801 -0.27514983689658256694 0.4783758537895421159 0.021782542893401715678 0.26930640118733722987 -0.24168384255406186178 0.052432627136293118164 -0.1316014108994158216 0.52315589282052454845];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0903614471439977;
y1_step1.xoffset = 36.72;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end
if (nargin < 2), error('Initial input states Xi argument needed.'); end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
elseif ~isempty(Xi)
    Q = size(Xi{1},2);
else
    Q = 0;
end

% Input 1 Delay States
Xd1 = cell(1,7);
for ts=1:6
    Xd1{ts} = mapminmax_apply(Xi{1,ts},x1_step1);
end

% Input 2 Delay States
Xd2 = cell(1,7);
for ts=1:6
    Xd2{ts} = mapminmax_apply(Xi{2,ts},x2_step1);
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Rotating delay state position
    xdts = mod(ts+5,7)+1;

    % Input 1
    X{1,ts} = X{1,ts}';
    Xd1{xdts} = mapminmax_apply(X{1,ts},x1_step1);

    % Input 2
    X{2,ts} = X{2,ts}';
    Xd2{xdts} = mapminmax_apply(X{2,ts},x2_step1);

    % Layer 1
    tapdelay1 = cat(1,Xd1{mod(xdts-[1 2 3 4 5 6]-1,7)+1});
    tapdelay2 = cat(1,Xd2{mod(xdts-[1 2 3 4 5 6]-1,7)+1});
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*tapdelay1 + IW1_2*tapdelay2);

    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;

    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
finalxts = TS+(1: 6);
xits = finalxts(finalxts<=6);
xts = finalxts(finalxts>6)-6;
Xf = [Xi(:,xits) X(:,xts)];
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
